knitr::opts_chunk$set(echo = TRUE)
# libraries
library(tidyverse)
# read in summary results
q2_df = readr::read_delim("./w4_p2_RECS2015_internet.csv", delim = ",")
# read in summary results
q2_df = readr::read_delim("./w4_p2_RECS2015_internet.csv", delim = ",")
# reshape for plotting
plot_data = q2_df %>%
pivot_longer(cols = starts_with('p_int'), names_prefix = 'p_int',
names_to = 'var') %>%
mutate( rurality = stringr::str_replace_all(var, '_.*', ''),
type = ifelse( grepl('_', var),
stringr::str_replace_all(var, '.*_', ''),
'est'
)
) %>%
pivot_wider(id_cols = c('division', 'rurality'),
names_from = type,
values_from = value
)
View(plot_data)
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
ggplot( aes(x = est, y = division)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
ggplot( aes(x = est, y = division)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr))
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
theme_bw()
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
xlim(c(0, 1.2))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
xlim(c(0.55, 1.0))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
xlim(c(0.6, 1.0))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
xlim(c(0.5, 1.0))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
xlim(c(0.58, 1.0))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
xlim(c(0.59, 0.90))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
xlim(c(0.59, 0.95))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
xlim(c(0.58, 0.95))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
xlim(c(0.58, 0.98))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
xlim(c(0.58, 0.97))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
xlim(c(0.58, 0.98))
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division, color = rurality)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
xlim(c(0.58, 0.98))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division, color = rurality)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
facet_wrap(~rurality, nrow = 1) +
xlim(c(0.58, 0.98))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division, color = rurality)) +
geom_point(
position = position_dodge2(width = 0.5)
) +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
xlim(c(0.58, 0.98))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division, color = rurality)) +
geom_point(
position = position_dodge2(width = 1)
) +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
xlim(c(0.58, 0.98))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division, color = rurality)) +
geom_point(
position = position_dodge2(width = 1)
) +
geom_errorbarh(aes(xmin = lwr, xmax = upr),
position = position_dodge2(width = 1)) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
xlim(c(0.58, 0.98))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division, color = rurality)) +
geom_point(
position = position_dodge2(width = 0.5)
) +
geom_errorbarh(aes(xmin = lwr, xmax = upr),
position = position_dodge2(width = 0.5),
height = 0.75) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
xlim(c(0.58, 0.98))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division, color = rurality)) +
geom_point(
position = position_dodge2(width = 0.5)
) +
geom_errorbarh(aes(xmin = lwr, xmax = upr),
position = position_dodge(width = 0.5),
height = 0.75) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
xlim(c(0.58, 0.98))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division, color = rurality)) +
geom_point(
position = position_dodge2(width = 0.5)
) +
geom_errorbarh(aes(xmin = lwr, xmax = upr),
position = position_dodge(width = 0.5),
height = 0.75) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
xlim(c(0.58, 0.98)) +
scale_color_manual( values = c('darkblue', 'darkred'))
# Remove comments to plot and save
#ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Use ggplot to produce a figure `p1` matching what is shown using the
#  data above.
p1 = plot_data %>%
filter(rurality != "diff") %>%
ggplot( aes(x = est, y = division, color = rurality)) +
geom_point(
position = position_dodge2(width = 0.5)
) +
geom_errorbarh(aes(xmin = lwr, xmax = upr),
position = position_dodge(width = 0.5),
height = 0.75) +
theme_bw() +
xlab("Propotion of homes with Internet access") +
ylab("division") +
xlim(c(0.58, 0.98)) +
scale_color_manual( values = c('darkred', 'darkblue'))
# Remove comments to plot and save
ggsave(p1, 'w4_p2_q1_plot.png')
p1
# Remove comments to plot and save
ggsave('w4_p2_q1_plot.png', p1)
# Use ggplot to produce a figure `p2` matching what is shown using the
#  data above.
p2 =  plot_data %>%
filter(rurality == "diff") %>%
ggplot( aes(x = est, y = division)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
theme_bw() +
xlab("Differences inpPropotion of homes with Internet access") +
ylab("division")
# Remove comments to plot and save
#ggsave(p2, 'w4_p2_q2_plot.png')
p2
# Use ggplot to produce a figure `p2` matching what is shown using the
#  data above.
p2 =  plot_data %>%
filter(rurality == "diff") %>%
ggplot( aes(x = est, y = division)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
geom_vline(aes(x = 0)) +
theme_bw() +
xlab("Differences in propotion of homes with Internet access") +
ylab("division")
# Use ggplot to produce a figure `p2` matching what is shown using the
#  data above.
p2 =  plot_data %>%
filter(rurality == "diff") %>%
ggplot( aes(x = est, y = division)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
geom_vline(aes(xintercept = 0)) +
theme_bw() +
xlab("Differences in propotion of homes with Internet access") +
ylab("division")
# Remove comments to plot and save
#ggsave(p2, 'w4_p2_q2_plot.png')
p2
# Use ggplot to produce a figure `p2` matching what is shown using the
#  data above.
p2 =  plot_data %>%
filter(rurality == "diff") %>%
ggplot( aes(x = est, y = division)) +
geom_point() +
geom_errorbarh(aes(xmin = lwr, xmax = upr)) +
geom_vline(aes(xintercept = 0), linetype = "dashed") +
theme_bw() +
xlab("Differences in propotion of homes with Internet access") +
ylab("division")
# Remove comments to plot and save
#ggsave(p2, 'w4_p2_q2_plot.png')
p2
# Remove comments to plot and save
ggsave('w4_p2_q2_plot.png', p2)
