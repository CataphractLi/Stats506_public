SELECT playerID, yearID, lgID as league,
(Cast (H as Float) /  Cast (AB as Float)) as avg
FROM BATTING
'
lahman %>% tbl(sql(query)) %>% collect()
batting_dt[, avg := (H / AB)][, .(playerID, yearID, league = lgID, avg)]
batting_dt %>%
mutate(avg = H / AB) %>%
select(playerID, yearID, lgID, avg) %>%
rename(league = lgID)
batting_dt %>%
mutate(avg = as.numeric(H / AB)) %>%
select(playerID, yearID, lgID, avg) %>%
rename(league = lgID)
batting_dt[, avg :=as.numeric(H / AB)]
[, .(playerID, yearID, league = lgID, avg)]
batting_dt[, avg :=as.numeric(H / AB)
][, .(playerID, yearID, league = lgID, avg)]
# dplyr
batting_tbl %>%
summarize(max_HBP = max(HBP, na.rm = TRUE))
batting_dt %>%
select(playerID, yearID, league = lgID, stint)
batting_dt %>%
mutate(avg = as.numeric(H / AB)) %>%
select(playerID, yearID, league = lgID, avg)
# SQL
query =
'
# write SQL query here
select max(HBP)
FROM BATTING
'
lahman %>% tbl(sql(query))
# SQL
query =
'
select max(HBP)
FROM BATTING
'
lahman %>% tbl(sql(query))
# SQL
query =
'
select max_HBP as max(HBP)
FROM BATTING
'
lahman %>% tbl(sql(query))
# SQL
query =
'
select max(HBP) as max_HBP
FROM BATTING
'
lahman %>% tbl(sql(query))
# data.table (summarize in "j")
batting_tbl[, .(max_HBP = max(HBP))]
# data.table (summarize in "j")
batting_dt[, .(max_HBP = max(HBP))]
# data.table (summarize in "j")
batting_dt[, .(max_HBP = max(HBP)), na.rm = TRUE]
# data.table (summarize in "j")
batting_dt[, .(max_HBP = max(HBP)), na.oimt = TRUE]
# data.table (summarize in "j")
batting_dt[, .(max_HBP = max(HBP)), na.omit = TRUE]
# data.table (summarize in "j")
na.omit(batting_dt[, .(max_HBP = max(HBP))])
# data.table (summarize in "j")
batting_dt[, .(max_HBP = max(HBP))]
# data.table (summarize in "j")
batting_dt[, .(max_HBP = max(HBP), na.rm = T)]
# data.table (summarize in "j")
batting_dt[, .(max_HBP = max(HBP, na.rm = T))]
# data.table, (group with "by")
batting_dt[ , .(avg = sum(H) / sum(AB)), .(playerID)]
# SQL, cast integers to numeric following example in question 2
query =
'
select sum(H) / sum(AB) as avg
FROM BATTING GROUP BY playerID
'
lahman %>% tbl(sql(query))
# SQL, cast integers to numeric following example in question 2
query =
'
select sum(H) / sum(AB) as avg
GROUP BY playerID
FROM BATTING
'
lahman %>% tbl(sql(query))
# SQL, cast integers to numeric following example in question 2
query =
'
select sum(H) / sum(AB) as avg
FROM BATTING GROUP BY playerID
'
lahman %>% tbl(sql(query))
# SQL, cast integers to numeric following example in question 2
query =
'
select (sum(H) / sum(AB)) as avg
FROM BATTING GROUP BY playerID
'
lahman %>% tbl(sql(query))
# data.table, (group with "by")
batting_dt[ , .(avg = sum(H) / sum(AB)), .(playerID)]
# SQL, cast integers to numeric following example in question 2
query =
'
select playerID, (sum(H) / sum(AB)) as avg
FROM BATTING GROUP BY playerID
'
lahman %>% tbl(sql(query))
# Copy the batting table to memory as a tibble: -------------------------------
batting_tbl = lahman %>%
tbl("BATTING") %>%
collect()
batting_tbl
# SQL, cast integers to numeric following example in question 2
query =
'
select playerID, H / AB as avg
FROM BATTING GROUP BY playerID
'
lahman %>% tbl(sql(query))
# SQL, cast integers to numeric following example in question 2
query =
'
select playerID, H / AB as avg
FROM BATTING GROUP BY playerID
'
lahman %>% tbl(sql(query))
batting_dt[, , yearID > 1999]
batting_dt[, yearID > 1999]
batting_dt[yearID > 1999]
batting_dt[yearID > 1999] %>%
.[, HR := sum(HR), by = playerID] %>%
.[, .(playerID, HR)]
batting_dt[yearID > 1999] %>%
.[, HR := sum(HR), by = playerID] %>%
.[, .(playerID, HR)] %>%
.[, order(-HR)]
batting_dt[yearID > 1999] %>%
.[, HR := sum(HR), by = playerID] %>%
.[, .(playerID, HR)] %>%
.[order(-HR)]
batting_dt[yearID > 1999] %>%
.[, HR := sum(HR), by = playerID] %>%
.[, .(playerID, HR)] %>%
.[order(-HR)]
batting_dt[yearID > 1999] %>%
.[, HR := sum(HR), .(playerID)] %>%
.[, .(playerID, HR)] %>%
.[order(-HR)]
batting_dt[yearID > 1999] %>%
.[, HR := sum(HR), .(playerID)] %>%
.[HR > 400, .(playerID, HR)] %>%
.[order(-HR)]
batting_dt[yearID > 1999, HR := sum(HR), .(playerID)] %>%
.[HR > 400, .(playerID, HR)] %>%
.[order(-HR)]
#SQL: nested anonymous table, "HAVING"
query =
'
SELECT *
FROM (
SELECT playerID, sum(HR) as HR
FROM BATTING
WHERE yearID > 1999
GROUP BY playerID
)
WHERE HR > 400
ORDER BY -HR
'
lahman %>% tbl(sql(query)) %>% collect()
batting_dt[yearID > 1999, HR := sum(HR), .(playerID)] %>%
.[HR > 400, .(playerID, HR)] %>%
.[order(-HR)]
batting_dt[yearID > 1999, (HR := sum(HR), .(playerID))] %>%
.[HR > 400, .(playerID, HR)] %>%
.[order(-HR)]
batting_dt[yearID > 1999, HR := sum(HR), .(playerID)] %>%
.[HR > 400, .(playerID, HR)] %>%
.[order(-HR)]
batting_dt[yearID > 1999, .(HR = sum(HR)), .(playerID)] %>%â€¨  .[order(-HR)] %>%â€¨  .[HR > 400]
batting_dt[yearID > 1999, .(HR = sum(HR)), .(playerID)] %>%
.[order(-HR)] %>%
.[HR > 400]
batting_dt[yearID > 1999, HR := sum(HR), .(playerID)] %>%
.[HR > 400, .(playerID, HR)] %>%
.[order(-HR)]
#SQL: nested anonymous table, "HAVING"
query =
'
SELECT *
FROM (
SELECT playerID, sum(HR) as HR
FROM BATTING
WHERE yearID > 1999
GROUP BY playerID
)
WHERE HR > 400
ORDER BY -HR
'
lahman %>% tbl(sql(query)) %>% collect()
batting_dt[yearID > 1999, HR := sum(HR), .(playerID)] %>%
.[HR > 400, .(playerID, HR)] %>%
.[order(-HR)]
batting_dt[yearID > 1999, HR := sum(HR), .(playerID)] %>%
.[HR > 400, .(playerID, HR)] %>%
.[order(-HR)]
# Create a local SQLlite database of the Lahman data: -------------------------
#! If this fails, run: install.packages('RSQLite')
lahman = lahman_sqlite()
# Copy the batting table to memory as a tibble: -------------------------------
batting_tbl = lahman %>%
tbl("BATTING") %>%
collect()
class(batting_tbl)
# Convert the copy in memory to a data.table: ---------------------------------
batting_dt = as.data.table(batting_tbl)
class(batting_dt)
batting_dt[yearID > 1999, HR := sum(HR), .(playerID)] %>%
.[HR > 400, .(playerID, HR)] %>%
.[order(-HR)]
lahman %>% tbl(sql(query)) %>% collect()
batting_dt[yearID > 1999, ,.(playerID)] %>%
.[, HR := sum(HR)] %>%
.[HR > 400, .(playerID, HR)] %>%
.[order(-HR)]
batting_dt[yearID > 1999] %>%
.[, HR := sum(HR), by = .(playerID)] %>%
.[HR > 400, .(playerID, HR)] %>%
.[order(-HR)]
batting_dt[yearID > 1999] %>%
.[, HR := sum(HR), by = .(playerID)] %>%
.[HR > 400, .(playerID, HR)] %>%
.[order(-HR)]
batting_dt[yearID > 1999, .(HR = sum(HR)), .(playerID)] %>%
.[order(-HR)] %>%
.[HR > 400]
batting_dt[yearID > 1999] %>%
.[, HR := sum(HR), by = .(playerID)] %>%
.[HR > 400, .(playerID, HR)] %>%
.[order(-HR)]
batting_dt[yearID > 1999, .(HR = sum(HR)), .(playerID)] %>%
.[order(-HR)] %>%
.[HR > 400]
#SQL: nested anonymous table, "HAVING"
query =
'
SELECT *
FROM (
SELECT playerID, sum(HR) as HR
FROM BATTING
WHERE yearID > 1999
GROUP BY playerID
)
WHERE HR > 400
ORDER BY -HR
'
lahman %>% tbl(sql(query)) %>% collect()
batting_dt[yearID > 1999, .(HR = sum(HR)), .(playerID)] %>%
.[order(-HR)] %>%
.[HR > 400]
# Create a local SQLlite database of the Lahman data: -------------------------
#! If this fails, run: install.packages('RSQLite')
lahman = lahman_sqlite()
# Copy the batting table to memory as a tibble: -------------------------------
batting_tbl = lahman %>%
tbl("BATTING") %>%
collect()
class(batting_tbl)
# Convert the copy in memory to a data.table: ---------------------------------
batting_dt = as.data.table(batting_tbl)
class(batting_dt)
#SQL: nested anonymous table, "HAVING"
query =
'
SELECT *
FROM (
SELECT playerID, sum(HR) as HR
FROM BATTING
WHERE yearID > 1999
GROUP BY playerID
)
WHERE HR > 400
ORDER BY -HR
'
lahman %>% tbl(sql(query)) %>% collect()
batting_dt[yearID > 1999, .(HR = sum(HR)), .(playerID)] %>%
.[order(-HR)] %>%
.[HR > 400]
batting_dt[yearID > 1999, .(HR = sum(HR)), .(playerID)] %>%
.[HR > 400] %>%
.[order(-HR)] %>%
# dplyr
batting_tbl %>%
filter(yearID > 1999) %>%
group_by(playerID) %>%
mutate(HR = sum(HR)) %>%
select(playerID, HR) %>%
filter(HR > 400) %>%
order_by(-HR)
batting_dt[yearID > 1999, .(HR = sum(HR)), .(playerID)] %>%
.[HR > 400] %>%
.[order(-HR)] %>%
# dplyr
batting_tbl %>%
filter(yearID > 1999) %>%
group_by(playerID) %>%
mutate(HR = sum(HR)) %>%
select(playerID, HR) %>%
filter(HR > 400) %>%
## Question 7 #################################################################
# final the number of "20-20" seasons with 20+ SB and 20+ HR by a
# player (across all stints) in each year, 2000-2019 since 2000
# SQL: 20-20
query =
'
SELECT yearID, COUNT(playerID) as N
FROM (
SELECT playerID, yearID, sum(SB) as SB, sum(HR) as HR
FROM BATTING
WHERE yearID > 1999
GROUP BY playerID, yearID
HAVING SB > 19 AND HR > 19
)
GROUP BY yearID
'
batting_dt[yearID > 1999, .(HR = sum(HR)), .(playerID)] %>%
.[HR > 400] %>%
.[order(-HR)] %>%
# dplyr
batting_tbl %>%
filter(yearID > 1999) %>%
group_by(playerID) %>%
mutate(HR = sum(HR)) %>%
select(playerID, HR) %>%
filter(HR > 400) %>%
## Question 7 #################################################################
# final the number of "20-20" seasons with 20+ SB and 20+ HR by a
# player (across all stints) in each year, 2000-2019 since 2000
# SQL: 20-20
query =
'
SELECT yearID, COUNT(playerID) as N
FROM (
SELECT playerID, yearID, sum(SB) as SB, sum(HR) as HR
FROM BATTING
WHERE yearID > 1999
GROUP BY playerID, yearID
HAVING SB > 19 AND HR > 19
)
GROUP BY yearID
'
batting_dt[yearID > 1999, .(HR = sum(HR)), .(playerID)] %>%
.[HR > 400] %>%
.[order(-HR)] %>%
# dplyr
batting_tbl %>%
filter(yearID > 1999) %>%
group_by(playerID) %>%
mutate(HR = sum(HR)) %>%
select(playerID, HR) %>%
filter(HR > 400)
batting_tbl %>%
filter(yearID > 1999) %>%
group_by(playerID) %>%
mutate(HR = sum(HR)) %>%
select(playerID, HR) %>%
filter(HR > 400)
batting_tbl %>%
filter(yearID > 1999) %>%
group_by(playerID) %>%
mutate(HR = sum(HR)) %>%
select(playerID, HR) %>%
filter(HR > 400) %>%
order_by(-HR)
?order_by
batting_tbl %>%
filter(yearID > 1999) %>%
group_by(playerID) %>%
mutate(HR = sum(HR)) %>%
select(playerID, HR) %>%
filter(HR > 400) %>%
order_by(HR)
batting_tbl %>%
filter(yearID > 1999) %>%
group_by(playerID) %>%
mutate(HR = sum(HR)) %>%
select(playerID, HR) %>%
filter(HR > 400) %>%
order_by(, HR)
batting_tbl %>%
filter(yearID > 1999) %>%
group_by(playerID) %>%
mutate(HR = sum(HR)) %>%
select(playerID, HR) %>%
filter(HR > 400)
lahman = lahman_sqlite()
# Copy the batting table to memory as a tibble: -------------------------------
batting_tbl = lahman %>%
tbl("BATTING") %>%
collect()
class(batting_tbl)
# Convert the copy in memory to a data.table: ---------------------------------
batting_dt = as.data.table(batting_tbl)
class(batting_dt)
batting_tbl %>%
filter(yearID > 1999) %>%
group_by(playerID) %>%
mutate(HR = sum(HR)) %>%
select(playerID, HR) %>%
filter(HR > 400)
batting_tbl %>%
filter(yearID > 1999) %>%
group_by(playerID) %>%
mutate(HR = sum(HR)) %>%
select(playerID, HR) %>%
filter(HR > 400) %>%
desc(HR)
batting_tbl %>%
filter(yearID > 1999) %>%
group_by(playerID) %>%
mutate(HR = sum(HR)) %>%
select(playerID, HR) %>%
filter(HR > 400) %>%
desc()
batting_tbl %>%
filter(yearID > 1999) %>%
group_by(playerID) %>%
mutate(HR = sum(HR)) %>%
select(playerID, HR) %>%
filter(HR > 400) %>%
arrange(HR)
batting_tbl %>%
filter(yearID > 1999) %>%
group_by(playerID) %>%
summarise(HR = sum(HR)) %>%
select(playerID, HR) %>%
filter(HR > 400) %>%
arrange(HR)
batting_tbl %>%
filter(yearID > 1999) %>%
group_by(playerID) %>%
summarise(HR = sum(HR)) %>%
select(playerID, HR) %>%
filter(HR > 400) %>%
arrange(desc(HR))
# data.table, (group with "by")
batting_dt[ , .(avg = sum(H) / sum(AB)), .(playerID)]
# SQL
query =
'
SELECT playerID, HBP
FROM BATTING WHERE yearID = 2016
'
lahman %>% tbl(sql(query))
# dplyr: filter
batting_tbl %>%
filter(yearID == 2016) %>%
select(playerID, HBP)
# data.table, (group with "by")
batting_dt[ , .(avg = sum(H) / sum(AB)), .(playerID)]
# SQL, cast integers to numeric following example in question 2
query =
'
SELECT playerID,
sum(Cast (H as Float) /  Cast (AB as Float)) as avg
FROM BATTING GROUP BY playerID
'
lahman %>% tbl(sql(query))
# data.table, (group with "by")
batting_dt[ , .(avg = sum(H) / sum(AB)), .(playerID)]
batting_dt[yearID == 2016, .(playerID, HBP)]
batting_tbl %>%
group_by(playerID) %>%
mutate(avg = sum(H) / sum(AB)) %>%
select(playerID, avg)
# SQL, cast integers to numeric following example in question 2
query =
'
SELECT playerID,
sum(Cast (H as Float) /  Cast (AB as Float)) as avg
FROM BATTING GROUP BY playerID
'
lahman %>% tbl(sql(query))
# data.table, (group with "by")
batting_dt[ , .(avg = sum(H) / sum(AB)), .(playerID)]
batting_tbl %>%
group_by(playerID) %>%
mutate(avg = sum(H) / sum(AB)) %>%
select(playerID, avg)
batting_tbl %>%
group_by(playerID) %>%
summarize(avg = sum(H) / sum(AB)) %>%
select(playerID, avg)
# SQL: 20-20
query =
'
SELECT yearID, COUNT(playerID) as N
FROM (
SELECT playerID, yearID, sum(SB) as SB, sum(HR) as HR
FROM BATTING
WHERE yearID > 1999
GROUP BY playerID, yearID
HAVING SB > 19 AND HR > 19
)
GROUP BY yearID
'
lahman %>% tbl(sql(query)) %>% collect()
